// <auto-generated />
using System;
using BancoMedellin.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BancoMedellin.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220404100436_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BancoMedellin.Shared.Cuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("NombreCuenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal>("UsuarioDni")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioDni");

                    b.ToTable("Cuentas");
                });

            modelBuilder.Entity("BancoMedellin.Shared.Usuario", b =>
                {
                    b.Property<decimal>("Dni")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<decimal>("UsuarioDni")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Dni");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Dni = 771185581m,
                            Nombre = "German Fonseca P",
                            Password = "1234",
                            UsuarioDni = 0m
                        },
                        new
                        {
                            Dni = 1001m,
                            Nombre = "Daniela Fonseca",
                            Password = "1243",
                            UsuarioDni = 0m
                        },
                        new
                        {
                            Dni = 1002m,
                            Nombre = "Juan Sebastian Fonseca",
                            Password = "1244",
                            UsuarioDni = 0m
                        });
                });

            modelBuilder.Entity("BancoMedellin.Shared.Cuenta", b =>
                {
                    b.HasOne("BancoMedellin.Shared.Usuario", "Usuario")
                        .WithMany("Cuentas")
                        .HasForeignKey("UsuarioDni")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BancoMedellin.Shared.Usuario", b =>
                {
                    b.Navigation("Cuentas");
                });
#pragma warning restore 612, 618
        }
    }
}
