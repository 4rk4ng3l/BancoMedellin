// <auto-generated />
using System;
using BancoMedellin.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BancoMedellin.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BancoMedellin.Shared.Autorizada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CuentaId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioDni")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CuentaId");

                    b.HasIndex("UsuarioDni");

                    b.ToTable("Autorizadas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CuentaId = 3,
                            UsuarioDni = 77185581
                        },
                        new
                        {
                            Id = 2,
                            CuentaId = 4,
                            UsuarioDni = 77185581
                        },
                        new
                        {
                            Id = 3,
                            CuentaId = 1,
                            UsuarioDni = 11111
                        },
                        new
                        {
                            Id = 4,
                            CuentaId = 2,
                            UsuarioDni = 11111
                        });
                });

            modelBuilder.Entity("BancoMedellin.Shared.Cuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<long>("Balance")
                        .HasColumnType("bigint");

                    b.Property<string>("NombreCuenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("UsuarioDni")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioDni");

                    b.ToTable("Cuentas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Balance = 50000L,
                            NombreCuenta = "Vivienda",
                            UsuarioDni = 77185581
                        },
                        new
                        {
                            Id = 2,
                            Balance = 90000L,
                            NombreCuenta = "Vehiculo",
                            UsuarioDni = 77185581
                        },
                        new
                        {
                            Id = 3,
                            Balance = 90000L,
                            NombreCuenta = "Universidad",
                            UsuarioDni = 11111
                        },
                        new
                        {
                            Id = 4,
                            Balance = 70000L,
                            NombreCuenta = "Excursion",
                            UsuarioDni = 11111
                        },
                        new
                        {
                            Id = 5,
                            Balance = 170000L,
                            NombreCuenta = "España",
                            UsuarioDni = 22222
                        });
                });

            modelBuilder.Entity("BancoMedellin.Shared.Transferencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CuentaCredito")
                        .HasColumnType("int");

                    b.Property<int>("CuentaDebito")
                        .HasColumnType("int");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("UsuarioDni")
                        .HasColumnType("int");

                    b.Property<long>("Valor")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CuentaCredito");

                    b.HasIndex("CuentaDebito");

                    b.HasIndex("UsuarioDni");

                    b.ToTable("Transferencias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CuentaCredito = 2,
                            CuentaDebito = 1,
                            UsuarioDni = 77185581,
                            Valor = 30000L
                        });
                });

            modelBuilder.Entity("BancoMedellin.Shared.Usuario", b =>
                {
                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Dni");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Dni = 77185581,
                            Nombre = "German Fonseca P",
                            PasswordHash = new byte[] { 31, 221, 243, 246, 208, 120, 146, 193, 189, 45, 49, 157, 244, 229, 253, 212, 224, 230, 205, 159, 219, 145, 211, 69, 107, 59, 223, 150, 86, 241, 61, 149, 67, 249, 34, 122, 234, 45, 137, 29, 8, 181, 5, 220, 77, 14, 228, 50, 251, 174, 96, 26, 240, 22, 22, 224, 243, 124, 56, 103, 115, 65, 167, 79 },
                            PasswordSalt = new byte[] { 240, 220, 214, 84, 201, 20, 249, 192, 114, 18, 1, 209, 175, 3, 3, 154, 77, 3, 237, 156, 55, 106, 84, 93, 117, 174, 249, 99, 245, 20, 25, 50, 230, 192, 75, 122, 172, 134, 223, 202, 172, 70, 139, 120, 48, 213, 226, 19, 155, 116, 94, 236, 160, 152, 169, 172, 125, 188, 118, 205, 89, 110, 77, 194, 114, 176, 124, 102, 204, 49, 10, 136, 0, 9, 241, 57, 40, 173, 65, 208, 59, 11, 253, 154, 153, 195, 15, 179, 42, 213, 222, 223, 25, 127, 26, 45, 104, 61, 194, 135, 6, 146, 54, 206, 242, 104, 237, 187, 106, 62, 2, 139, 188, 244, 121, 215, 50, 75, 187, 200, 198, 219, 178, 101, 74, 53, 38, 167 }
                        },
                        new
                        {
                            Dni = 11111,
                            Nombre = "Daniela Fonseca",
                            PasswordHash = new byte[] { 239, 190, 185, 51, 12, 68, 64, 175, 36, 44, 248, 164, 163, 94, 240, 85, 143, 7, 144, 7, 126, 136, 202, 224, 126, 24, 43, 58, 72, 115, 63, 131, 219, 200, 157, 238, 87, 243, 157, 211, 65, 177, 127, 158, 130, 24, 155, 164, 248, 183, 241, 190, 6, 49, 237, 22, 34, 97, 28, 253, 139, 22, 121, 18 },
                            PasswordSalt = new byte[] { 6, 125, 78, 31, 90, 58, 50, 120, 135, 235, 24, 138, 50, 65, 241, 114, 86, 150, 215, 184, 81, 252, 252, 103, 171, 39, 105, 78, 7, 221, 235, 244, 226, 26, 48, 87, 235, 156, 28, 67, 94, 39, 131, 146, 101, 12, 148, 125, 183, 113, 150, 225, 11, 95, 236, 50, 136, 81, 151, 220, 177, 65, 199, 11, 13, 7, 93, 206, 200, 74, 3, 211, 206, 110, 84, 5, 141, 125, 106, 245, 216, 49, 77, 17, 61, 65, 29, 112, 102, 189, 30, 81, 158, 52, 88, 240, 240, 188, 4, 252, 252, 14, 2, 218, 219, 218, 130, 149, 36, 8, 37, 73, 23, 45, 48, 136, 176, 64, 156, 252, 202, 70, 156, 209, 254, 130, 124, 254 }
                        },
                        new
                        {
                            Dni = 22222,
                            Nombre = "Juan Sebastian Fonseca",
                            PasswordHash = new byte[] { 241, 34, 109, 122, 12, 226, 22, 193, 44, 77, 165, 127, 119, 81, 130, 100, 131, 87, 75, 216, 62, 224, 18, 190, 220, 79, 208, 158, 198, 60, 246, 169, 154, 82, 224, 147, 176, 52, 50, 225, 78, 27, 81, 143, 144, 64, 147, 125, 126, 56, 13, 230, 147, 180, 29, 47, 68, 201, 183, 37, 63, 65, 70, 97 },
                            PasswordSalt = new byte[] { 229, 161, 11, 41, 170, 116, 239, 105, 40, 81, 246, 240, 231, 170, 170, 182, 35, 24, 251, 216, 194, 220, 201, 210, 1, 49, 216, 118, 176, 153, 131, 104, 22, 189, 223, 30, 82, 135, 143, 140, 122, 201, 214, 90, 123, 90, 38, 193, 55, 226, 162, 56, 237, 43, 251, 162, 58, 114, 143, 34, 150, 248, 53, 200, 207, 196, 187, 248, 208, 189, 130, 233, 133, 195, 195, 47, 179, 47, 182, 182, 63, 116, 226, 31, 224, 251, 228, 45, 34, 240, 213, 243, 119, 115, 7, 149, 4, 114, 59, 233, 54, 249, 212, 178, 220, 37, 49, 37, 214, 12, 231, 101, 41, 235, 147, 92, 168, 17, 100, 65, 248, 87, 19, 120, 180, 72, 78, 45 }
                        });
                });

            modelBuilder.Entity("BancoMedellin.Shared.Autorizada", b =>
                {
                    b.HasOne("BancoMedellin.Shared.Cuenta", "Cuenta")
                        .WithMany("Autorizadas")
                        .HasForeignKey("CuentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BancoMedellin.Shared.Usuario", "Usuario")
                        .WithMany("Autorizadas")
                        .HasForeignKey("UsuarioDni")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cuenta");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BancoMedellin.Shared.Cuenta", b =>
                {
                    b.HasOne("BancoMedellin.Shared.Usuario", "Usuario")
                        .WithMany("Cuentas")
                        .HasForeignKey("UsuarioDni")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BancoMedellin.Shared.Transferencia", b =>
                {
                    b.HasOne("BancoMedellin.Shared.Cuenta", "Debito")
                        .WithMany("TransferenciasCredito")
                        .HasForeignKey("CuentaCredito")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BancoMedellin.Shared.Cuenta", "Credito")
                        .WithMany("TransferenciasDebito")
                        .HasForeignKey("CuentaDebito")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BancoMedellin.Shared.Usuario", "Usuario")
                        .WithMany("Transferencias")
                        .HasForeignKey("UsuarioDni")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Credito");

                    b.Navigation("Debito");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BancoMedellin.Shared.Cuenta", b =>
                {
                    b.Navigation("Autorizadas");

                    b.Navigation("TransferenciasCredito");

                    b.Navigation("TransferenciasDebito");
                });

            modelBuilder.Entity("BancoMedellin.Shared.Usuario", b =>
                {
                    b.Navigation("Autorizadas");

                    b.Navigation("Cuentas");

                    b.Navigation("Transferencias");
                });
#pragma warning restore 612, 618
        }
    }
}
