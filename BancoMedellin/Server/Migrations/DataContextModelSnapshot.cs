// <auto-generated />
using System;
using BancoMedellin.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BancoMedellin.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BancoMedellin.Shared.Autorizada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CuentaId")
                        .HasColumnType("int");

                    b.Property<decimal>("UsuarioDni")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("CuentaId");

                    b.HasIndex("UsuarioDni");

                    b.ToTable("Autorizadas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CuentaId = 3,
                            UsuarioDni = 77185581m
                        },
                        new
                        {
                            Id = 2,
                            CuentaId = 4,
                            UsuarioDni = 77185581m
                        },
                        new
                        {
                            Id = 3,
                            CuentaId = 1,
                            UsuarioDni = 1001m
                        },
                        new
                        {
                            Id = 4,
                            CuentaId = 2,
                            UsuarioDni = 1001m
                        });
                });

            modelBuilder.Entity("BancoMedellin.Shared.Cuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("NombreCuenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal>("UsuarioDni")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioDni");

                    b.ToTable("Cuentas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Balance = 50000m,
                            NombreCuenta = "Vivienda",
                            UsuarioDni = 77185581m
                        },
                        new
                        {
                            Id = 2,
                            Balance = 90000m,
                            NombreCuenta = "Vehiculo",
                            UsuarioDni = 77185581m
                        },
                        new
                        {
                            Id = 3,
                            Balance = 90000m,
                            NombreCuenta = "Universidad",
                            UsuarioDni = 1001m
                        },
                        new
                        {
                            Id = 4,
                            Balance = 70000m,
                            NombreCuenta = "Excursion",
                            UsuarioDni = 1001m
                        },
                        new
                        {
                            Id = 5,
                            Balance = 170000m,
                            NombreCuenta = "España",
                            UsuarioDni = 1002m
                        });
                });

            modelBuilder.Entity("BancoMedellin.Shared.Transferencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CuentaCredito")
                        .HasColumnType("int");

                    b.Property<int>("CuentaDebito")
                        .HasColumnType("int");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal>("UsuarioDni")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("Valor")
                        .IsConcurrencyToken()
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("CuentaCredito");

                    b.HasIndex("CuentaDebito");

                    b.HasIndex("UsuarioDni");

                    b.ToTable("Transferencias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CuentaCredito = 2,
                            CuentaDebito = 1,
                            UsuarioDni = 77185581m,
                            Valor = 30000m
                        });
                });

            modelBuilder.Entity("BancoMedellin.Shared.Usuario", b =>
                {
                    b.Property<decimal>("Dni")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<decimal>("UsuarioDni")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Dni");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Dni = 77185581m,
                            Nombre = "German Fonseca P",
                            Password = "1234",
                            UsuarioDni = 0m
                        },
                        new
                        {
                            Dni = 1001m,
                            Nombre = "Daniela Fonseca",
                            Password = "1243",
                            UsuarioDni = 0m
                        },
                        new
                        {
                            Dni = 1002m,
                            Nombre = "Juan Sebastian Fonseca",
                            Password = "1244",
                            UsuarioDni = 0m
                        });
                });

            modelBuilder.Entity("BancoMedellin.Shared.Autorizada", b =>
                {
                    b.HasOne("BancoMedellin.Shared.Cuenta", "Cuenta")
                        .WithMany("Autorizadas")
                        .HasForeignKey("CuentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BancoMedellin.Shared.Usuario", "Usuario")
                        .WithMany("Autorizadas")
                        .HasForeignKey("UsuarioDni")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cuenta");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BancoMedellin.Shared.Cuenta", b =>
                {
                    b.HasOne("BancoMedellin.Shared.Usuario", "Usuario")
                        .WithMany("Cuentas")
                        .HasForeignKey("UsuarioDni")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BancoMedellin.Shared.Transferencia", b =>
                {
                    b.HasOne("BancoMedellin.Shared.Cuenta", "Debito")
                        .WithMany("TransferenciasCredito")
                        .HasForeignKey("CuentaCredito")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BancoMedellin.Shared.Cuenta", "Credito")
                        .WithMany("TransferenciasDebito")
                        .HasForeignKey("CuentaDebito")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BancoMedellin.Shared.Usuario", "Usuario")
                        .WithMany("Transferencias")
                        .HasForeignKey("UsuarioDni")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Credito");

                    b.Navigation("Debito");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BancoMedellin.Shared.Cuenta", b =>
                {
                    b.Navigation("Autorizadas");

                    b.Navigation("TransferenciasCredito");

                    b.Navigation("TransferenciasDebito");
                });

            modelBuilder.Entity("BancoMedellin.Shared.Usuario", b =>
                {
                    b.Navigation("Autorizadas");

                    b.Navigation("Cuentas");

                    b.Navigation("Transferencias");
                });
#pragma warning restore 612, 618
        }
    }
}
